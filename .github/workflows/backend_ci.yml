build_and_push_images:
  runs-on: ubuntu-latest
  needs: test_and_lint_backends

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      run: az acr login --name ${{ env.ACR_NAME }}

    - name: Set ACR login server dynamically
      run: echo "ACR_LOGIN_SERVER=${{ env.ACR_NAME }}.azurecr.io" >> $GITHUB_ENV

    - name: Set IMAGE_TAG
      run: echo "IMAGE_TAG=${{ github.sha }}-${{ github.run_number }}" >> $GITHUB_ENV

    - name: Debug env
      run: |
        echo "ACR_NAME=$ACR_NAME"
        echo "IMAGE_TAG=$IMAGE_TAG"
        echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER"

    - name: Build and Push Product Service Image
      run: |
        echo "Building product_service image..."
        docker build -t $ACR_LOGIN_SERVER/product_service:$IMAGE_TAG ./backend/product_service/
        docker push $ACR_LOGIN_SERVER/product_service:$IMAGE_TAG
        docker tag $ACR_LOGIN_SERVER/product_service:$IMAGE_TAG $ACR_LOGIN_SERVER/product_service:latest
        docker push $ACR_LOGIN_SERVER/product_service:latest

    - name: Build and Push Order Service Image
      run: |
        echo "Building order_service image..."
        docker build -t $ACR_LOGIN_SERVER/order_service:$IMAGE_TAG ./backend/order_service/
        docker push $ACR_LOGIN_SERVER/order_service:$IMAGE_TAG
        docker tag $ACR_LOGIN_SERVER/order_service:$IMAGE_TAG $ACR_LOGIN_SERVER/order_service:latest
        docker push $ACR_LOGIN_SERVER/order_service:latest

    - name: Logout from Azure
      run: az logout
      if: always()
